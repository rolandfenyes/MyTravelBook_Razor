// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyTravelBook.Dal;

namespace MyTravelBook.Dal.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20210508141119_document")]
    partial class document
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("MyTravelBook.Dal.Entities.Accommodation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccommodationType")
                        .HasColumnType("int");

                    b.Property<DateTime>("Ends")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PricePerNight")
                        .HasColumnType("real");

                    b.Property<DateTime>("Starts")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Accommodations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccommodationType = 1,
                            Ends = new DateTime(2021, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Split",
                            PricePerNight = 13.8f,
                            Starts = new DateTime(2021, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AccommodationType = 0,
                            Ends = new DateTime(2021, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Balaton",
                            PricePerNight = 0f,
                            Starts = new DateTime(2021, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MyTravelBook.Dal.Entities.AccommodationParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccommodationId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AccommodationParticipants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccommodationId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            AccommodationId = 2,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("MyTravelBook.Dal.Entities.Budget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Accommodation")
                        .HasColumnType("real");

                    b.Property<float>("Other")
                        .HasColumnType("real");

                    b.Property<float>("Remains")
                        .HasColumnType("real");

                    b.Property<float>("Spent")
                        .HasColumnType("real");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<float>("Transportation")
                        .HasColumnType("real");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("MyTravelBook.Dal.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DrivingLicense")
                        .HasColumnType("bit");

                    b.Property<bool>("HealthCard")
                        .HasColumnType("bit");

                    b.Property<bool>("IdCard")
                        .HasColumnType("bit");

                    b.Property<bool>("InternationalPassport")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DrivingLicense = true,
                            HealthCard = true,
                            IdCard = true,
                            InternationalPassport = false
                        },
                        new
                        {
                            Id = 2,
                            DrivingLicense = true,
                            HealthCard = true,
                            IdCard = true,
                            InternationalPassport = false
                        });
                });

            modelBuilder.Entity("MyTravelBook.Dal.Entities.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpenseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Expenses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Hot dog + 2db Hell",
                            ExpenseName = "Shell",
                            Location = "Érd",
                            Price = 5f
                        },
                        new
                        {
                            Id = 2,
                            Description = "Szendvics",
                            ExpenseName = "Benzinkút",
                            Location = "Letenye",
                            Price = 2f
                        },
                        new
                        {
                            Id = 3,
                            Description = "BigTasty menü",
                            ExpenseName = "McDonalds",
                            Location = "Split",
                            Price = 5f
                        },
                        new
                        {
                            Id = 4,
                            Description = "1db mangó ízű shisha",
                            ExpenseName = "Shisha bár",
                            Location = "Split",
                            Price = 10f
                        },
                        new
                        {
                            Id = 5,
                            Description = "Hajókirándulás Hvar szigetére.",
                            ExpenseName = "Hajókirándulás",
                            Location = "Split",
                            Price = 30f
                        });
                });

            modelBuilder.Entity("MyTravelBook.Dal.Entities.ExpenseParticipants", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ExpenseParticipants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpenseId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ExpenseId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            ExpenseId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            ExpenseId = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            ExpenseId = 5,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("MyTravelBook.Dal.Entities.Friend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId1")
                        .HasColumnType("int");

                    b.Property<int>("UserId2")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("MyTravelBook.Dal.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("MyTravelBook.Dal.Entities.Travel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Consumption")
                        .HasColumnType("real");

                    b.Property<string>("Departure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Distance")
                        .HasColumnType("real");

                    b.Property<float>("FuelPrice")
                        .HasColumnType("real");

                    b.Property<float>("LuggagePrice")
                        .HasColumnType("real");

                    b.Property<float>("SeatPrice")
                        .HasColumnType("real");

                    b.Property<float>("TicketPrice")
                        .HasColumnType("real");

                    b.Property<int>("TransportType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Travels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Consumption = 6.7f,
                            Departure = "Érd",
                            Destination = "Split",
                            Distance = 734f,
                            FuelPrice = 1.33f,
                            LuggagePrice = 0f,
                            SeatPrice = 0f,
                            TicketPrice = 0f,
                            TransportType = 2
                        },
                        new
                        {
                            Id = 2,
                            Consumption = 6.7f,
                            Departure = "Split",
                            Destination = "Érd",
                            Distance = 734f,
                            FuelPrice = 1.33f,
                            LuggagePrice = 0f,
                            SeatPrice = 0f,
                            TicketPrice = 0f,
                            TransportType = 2
                        },
                        new
                        {
                            Id = 3,
                            Consumption = 6.7f,
                            Departure = "Érd",
                            Destination = "Balatonvilágos",
                            Distance = 76.3f,
                            FuelPrice = 1.33f,
                            LuggagePrice = 0f,
                            SeatPrice = 0f,
                            TicketPrice = 0f,
                            TransportType = 2
                        },
                        new
                        {
                            Id = 4,
                            Consumption = 6.7f,
                            Departure = "Balatonvilágos",
                            Destination = "Érd",
                            Distance = 76.3f,
                            FuelPrice = 1.33f,
                            LuggagePrice = 0f,
                            SeatPrice = 0f,
                            TicketPrice = 0f,
                            TransportType = 2
                        });
                });

            modelBuilder.Entity("MyTravelBook.Dal.Entities.TravelParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TravelId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TravelParticipants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TravelId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            TravelId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            TravelId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            TravelId = 4,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("MyTravelBook.Dal.Entities.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Ends")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Starts")
                        .HasColumnType("datetime2");

                    b.Property<string>("TripName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TripOwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DocumentId = 1,
                            Ends = new DateTime(2021, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Starts = new DateTime(2021, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TripName = "Split",
                            TripOwnerId = 1
                        },
                        new
                        {
                            Id = 2,
                            DocumentId = 2,
                            Ends = new DateTime(2021, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Starts = new DateTime(2021, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TripName = "Balaton",
                            TripOwnerId = 1
                        });
                });

            modelBuilder.Entity("MyTravelBook.Dal.Entities.TripAccommodation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccommodationId")
                        .HasColumnType("int");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TripAccommodations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccommodationId = 1,
                            TripId = 1
                        },
                        new
                        {
                            Id = 2,
                            AccommodationId = 2,
                            TripId = 2
                        });
                });

            modelBuilder.Entity("MyTravelBook.Dal.Entities.TripExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TripExpenses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpenseId = 1,
                            TripId = 1
                        },
                        new
                        {
                            Id = 2,
                            ExpenseId = 2,
                            TripId = 1
                        },
                        new
                        {
                            Id = 3,
                            ExpenseId = 3,
                            TripId = 1
                        },
                        new
                        {
                            Id = 4,
                            ExpenseId = 4,
                            TripId = 1
                        },
                        new
                        {
                            Id = 5,
                            ExpenseId = 5,
                            TripId = 1
                        });
                });

            modelBuilder.Entity("MyTravelBook.Dal.Entities.TripParticipants", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TripParticipants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TripId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            TripId = 2,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("MyTravelBook.Dal.Entities.TripTravel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TravelId")
                        .HasColumnType("int");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TripTravels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TravelId = 1,
                            TripId = 1
                        },
                        new
                        {
                            Id = 2,
                            TravelId = 2,
                            TripId = 1
                        },
                        new
                        {
                            Id = 3,
                            TravelId = 3,
                            TripId = 2
                        },
                        new
                        {
                            Id = 4,
                            TravelId = 4,
                            TripId = 2
                        });
                });

            modelBuilder.Entity("MyTravelBook.Dal.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("MyTravelBook.Dal.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("MyTravelBook.Dal.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyTravelBook.Dal.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("MyTravelBook.Dal.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
